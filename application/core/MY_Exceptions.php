<?php/**Exception and error handling - adds FirePHP. * * @copyright Copyright 2011 The Open University. */class MY_Exceptions extends CI_Exceptions {  function log_exception($severity, $message, $filepath, $line, $label='Error'){    $severity = ( ! isset($this->levels[$severity])) ? $severity : $this->levels[$severity];	if ($filepath){		// Security - works on Linux anyway ('/').		$my_filepath = str_replace(BASEPATH, '-', $filepath);	}	$ex = array('severity'=>$severity, 'message'=>$message, 'filepath'=>$my_filepath, 'line'=>$line);	$label = ($filepath) ? 'PHP error' : $label;	$CI =& get_instance();	if ($CI->firephp){		$CI->firephp->fb($ex, $label, 'ERROR');	}	return parent::log_exception($severity, $message, $filepath, $line);  }  function __show_404($page = '', $log_error = TRUE){    parent::show_404($page, TRUE);  }  function __show_php_error($severity, $message, $filepath, $line){    #$this->log_exception($severity, $message, $filepath, $line, 'PHP error');		return parent::show_php_error($severity, $message, $filepath, $line);  }}